
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  password: 'password'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  type: 'type',
  name: 'name',
  userId: 'userId',
  slug: 'slug'
};

exports.Prisma.WordScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  kr: 'kr',
  en: 'en',
  example: 'example'
};

exports.Prisma.ReviewProcessScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  wordId: 'wordId',
  lastReviewed: 'lastReviewed',
  nextReview: 'nextReview',
  interval: 'interval',
  easeFactor: 'easeFactor',
  repetition: 'repetition',
  grade: 'grade'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.CategoryType = exports.$Enums.CategoryType = {
  DEFAULT: 'DEFAULT',
  CUSTOM: 'CUSTOM'
};

exports.Grade = exports.$Enums.Grade = {
  FORGOT: 'FORGOT',
  HARD: 'HARD',
  OKAY: 'OKAY',
  EASY: 'EASY'
};

exports.Prisma.ModelName = {
  User: 'User',
  Category: 'Category',
  Word: 'Word',
  ReviewProcess: 'ReviewProcess'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/sara/repos/word-bank/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/sara/repos/word-bank/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum CategoryType {\n  DEFAULT\n  CUSTOM\n}\n\nenum Grade {\n  FORGOT\n  HARD\n  OKAY\n  EASY\n}\n\nmodel User {\n  id         Int             @id @default(autoincrement())\n  firstName  String          @map(\"first_name\")\n  lastName   String          @map(\"last_name\")\n  email      String          @unique\n  password   String\n  categories Category[]\n  words      Word[]\n  reviews    ReviewProcess[]\n\n  @@map(\"users\")\n}\n\nmodel Category {\n  id     Int          @id @default(autoincrement())\n  type   CategoryType\n  name   String\n  user   User         @relation(fields: [userId], references: [id])\n  userId Int          @map(\"user_id\")\n  slug   String\n  words  Word[]       @relation(\"CategoryWords\")\n\n  @@unique([userId, slug]) // Slug must be unique only to that user\n  @@map(\"categories\")\n}\n\nmodel Word {\n  id         Int             @id @default(autoincrement())\n  user       User            @relation(fields: [userId], references: [id])\n  userId     Int             @map(\"author_id\")\n  categories Category[]      @relation(\"CategoryWords\")\n  kr         String\n  en         String\n  example    String?\n  reviews    ReviewProcess[]\n\n  @@map(\"words\")\n}\n\n// Optional terms, are blank at creating but updated after user encounters words in flashcard review\nmodel ReviewProcess {\n  id           Int       @id @default(autoincrement())\n  user         User      @relation(fields: [userId], references: [id])\n  userId       Int\n  word         Word      @relation(fields: [wordId], references: [id])\n  wordId       Int\n  lastReviewed DateTime? @map(\"last_reviewed\")\n  nextReview   DateTime? @map(\"next_review\")\n  interval     Int       @default(1) // in days\n  easeFactor   Float     @default(2.5) @map(\"ease_factor\")\n  repetition   Int       @default(0)\n  grade        Grade?\n}\n",
  "inlineSchemaHash": "6be17f3ccd1183cd57c3e65e2e56bc04fc23b4f81771889604bb6cc02f6968a9",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"first_name\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"last_name\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categories\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToUser\"},{\"name\":\"words\",\"kind\":\"object\",\"type\":\"Word\",\"relationName\":\"UserToWord\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"ReviewProcess\",\"relationName\":\"ReviewProcessToUser\"}],\"dbName\":\"users\"},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"CategoryType\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CategoryToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"user_id\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"words\",\"kind\":\"object\",\"type\":\"Word\",\"relationName\":\"CategoryWords\"}],\"dbName\":\"categories\"},\"Word\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWord\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"author_id\"},{\"name\":\"categories\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryWords\"},{\"name\":\"kr\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"en\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"example\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"ReviewProcess\",\"relationName\":\"ReviewProcessToWord\"}],\"dbName\":\"words\"},\"ReviewProcess\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewProcessToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"word\",\"kind\":\"object\",\"type\":\"Word\",\"relationName\":\"ReviewProcessToWord\"},{\"name\":\"wordId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastReviewed\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_reviewed\"},{\"name\":\"nextReview\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"next_review\"},{\"name\":\"interval\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"easeFactor\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"ease_factor\"},{\"name\":\"repetition\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"grade\",\"kind\":\"enum\",\"type\":\"Grade\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

